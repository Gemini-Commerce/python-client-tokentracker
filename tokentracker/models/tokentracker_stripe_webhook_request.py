# coding: utf-8

"""
    Token Tracker Service

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Contact: info@gemini-commerce.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Any, ClassVar, Dict, List, Optional
from pydantic import BaseModel, StrictBool, StrictStr
from pydantic import Field
from tokentracker.models.stripe_event_data import StripeEventData
from tokentracker.models.stripe_event_request import StripeEventRequest
try:
    from typing import Self
except ImportError:
    from typing_extensions import Self

class TokentrackerStripeWebhookRequest(BaseModel):
    """
    TokentrackerStripeWebhookRequest
    """ # noqa: E501
    data: Optional[StripeEventData] = None
    account: Optional[StrictStr] = None
    api_version: Optional[StrictStr] = Field(default=None, alias="apiVersion")
    created: Optional[StrictStr] = None
    id: Optional[StrictStr] = None
    livemode: Optional[StrictBool] = None
    object: Optional[StrictStr] = None
    pending_webhooks: Optional[StrictStr] = Field(default=None, alias="pendingWebhooks")
    request: Optional[StripeEventRequest] = None
    type: Optional[StrictStr] = None
    __properties: ClassVar[List[str]] = ["data", "account", "apiVersion", "created", "id", "livemode", "object", "pendingWebhooks", "request", "type"]

    model_config = {
        "populate_by_name": True,
        "validate_assignment": True,
        "protected_namespaces": (),
    }


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of TokentrackerStripeWebhookRequest from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        _dict = self.model_dump(
            by_alias=True,
            exclude={
            },
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of data
        if self.data:
            _dict['data'] = self.data.to_dict()
        # override the default output from pydantic by calling `to_dict()` of request
        if self.request:
            _dict['request'] = self.request.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: Dict) -> Self:
        """Create an instance of TokentrackerStripeWebhookRequest from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "data": StripeEventData.from_dict(obj.get("data")) if obj.get("data") is not None else None,
            "account": obj.get("account"),
            "apiVersion": obj.get("apiVersion"),
            "created": obj.get("created"),
            "id": obj.get("id"),
            "livemode": obj.get("livemode"),
            "object": obj.get("object"),
            "pendingWebhooks": obj.get("pendingWebhooks"),
            "request": StripeEventRequest.from_dict(obj.get("request")) if obj.get("request") is not None else None,
            "type": obj.get("type")
        })
        return _obj


